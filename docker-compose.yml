version: '3.3'

networks:
  monitoring:
    driver: bridge
  cnode:
    driver: bridge
    
volumes:
  prometheus_data: {}
  grafana_data: {}
  alertmanager_data: {}

services:

  cardano-node:
    image: inputoutput/cardano-node:latest
    container_name: cnode
    restart: always
    volumes:
      - /opt/cardano/cnode:/opt/cardano
    command:
      - '-e NETWORK=mainnet'
    entrypoint: /opt/cardano/scripts/cnode.sh
    ports:
      - 6000:3001
      - 12798:12798
    networks:
      - cnode
      
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9091:9100
    networks:
      - monitoring

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080

#  telegrambot:
#    image: vnpip/telegrambot:latest
#    container_name: telegrambot
#    restart: always
#    volumes:
#      - /opt/cardano/monitoring/prometheus_bot:/etc/telegrambot
#    command:
#      - '-c /etc/telegrambot/config.yaml'
#      - '-l ":9087" '
#      - '-t /etc/telegrambot/template_scada.tmpl'
#    ports:
#      - 9087:9087
#    networks:
#      - monitoring
      
  alertmanager:
    image: prom/alertmanager:latest
#    depends_on:
#      - telegrambot
    container_name: alertmanager
    restart: always
    volumes:
      - alertmanager_data:/data/
      - /opt/cardano/monitoring/alertmanager/:/config/
    restart: always
    command:
      - '--config.file=/config/alertmanager.yml'
      - '--storage.path=/data'
    ports:
      - 9093:9093
 #   links:
 #     - telegrambot
    networks:
      - monitoring
      
  prometheus:
    image: prom/prometheus:latest
    depends_on:
      - cardano-node
      - node-exporter
      - alertmanager
      - cadvisor
    container_name: prometheus
    restart: always
    volumes:
      - /opt/cardano/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    links:
      - cadvisor
      - alertmanager
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    container_name: grafana
    restart: always
#    command:
#      - '-e "GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource"'
    volumes:
      - grafana_data:/var/lib/grafana
      - /opt/cardano/monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - /opt/cardano/monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
      - /opt/cardano/monitoring/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - 5000:3000
    links:
      - prometheus
    env_file:
      - monitoring.conf
    networks:
      - monitoring
